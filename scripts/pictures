#!/bin/python

import os
import pathlib
from datetime import datetime as dt

import ia256utilities.hashfile as hf


def get_files(path: pathlib.Path, extensions: list):
    files = []
    for extension in extensions:
        for file in path.glob(f'**/*{extension}'):
            files.append(file)
    return files


def remove_empty_folders(paths: list[pathlib.Path]):
    for path in paths:
        for folder in reversed(list(path.glob('**/'))):
            if folder.name not in ['.stfolder', '.thumbnails']:
                try:
                    folder.rmdir()
                except:
                    pass


def fix_name(name: str):
    for character in ['<', '>', ':', '"', '/', '\\', '|', '?', '*']:
        name = name.replace(character, '_')
    return name


def move_file(old_path, new_path):
    if new_path == old_path:
        pass
    elif new_path.exists():
        old_path.unlink()
        print('File already exist')
    else:
        new_path.parent.mkdir(parents=True, exist_ok=True)
        new_path.write_bytes(old_path.read_bytes())
        old_path.unlink()
        # old_path.rename(new_path)


def try_delete_dir(dir: pathlib.Path):
    try:
        dir.rmdir()
    except:
        pass


def main():
    home_path = pathlib.Path.home()
    dcim_path = home_path / 'dcim'
    dcim_camera_path = dcim_path / 'Camera'
    dcim_screenshots_path = dcim_path / 'Screenshots'
    pictures_path = home_path / 'pictures'

    avatars_path = pictures_path / 'avatars'
    dakimakura_path = pictures_path / 'dakimakura'
    icearrow256_path = pictures_path / 'my'
    nika_path = pictures_path / 'nika'
    photos_path = pictures_path / 'photos'
    screenshots_path = pictures_path / 'screenshots'
    telegram_path = pictures_path / 'NekoX'
    wallpapers_desktop_path = pictures_path / 'wallpapers' / 'desktop'
    wallpapers_android_path = pictures_path / 'wallpapers' / 'android'

    # Avatars
    avatars_files = get_files(avatars_path, ['.png'])
    for avatars_file in avatars_files:
        new_path = avatars_path / \
            (hf.get_sha256(avatars_file) + avatars_file.suffix)
        move_file(avatars_file, new_path)

    # Dakimakura
    dakimakura_files = get_files(dakimakura_path, ['.png'])
    for dakimakura_file in dakimakura_files:
        new_path = dakimakura_path / \
            (hf.get_sha256(dakimakura_file) + dakimakura_file.suffix)
        move_file(dakimakura_file, new_path)
    
    # Desktop wallpapers
    wallpapers_desktop_files = get_files(wallpapers_desktop_path, ['.png', '.jpg'])
    for wallpapers_desktop_file in wallpapers_desktop_files:
        new_path = wallpapers_desktop_path / \
            (hf.get_sha256(wallpapers_desktop_file) + wallpapers_desktop_file.suffix)
        if wallpapers_desktop_file != new_path:
            print(wallpapers_desktop_file, new_path)
            move_file(wallpapers_desktop_file, new_path)

    # Android wallpapers
    wallpapers_android_files = get_files(wallpapers_android_path, ['.png', '.jpg'])
    for wallpapers_android_file in wallpapers_android_files:
        new_path = wallpapers_android_path / \
            (hf.get_sha256(wallpapers_android_file) + wallpapers_android_file.suffix)
        if wallpapers_android_file != new_path:
            print(wallpapers_android_file, new_path)
            move_file(wallpapers_android_file, new_path)

    # Nika
    nika_files = get_files(nika_path, ['.png', '.jpg'])
    for nika_file in nika_files:
        new_path = nika_path / (hf.get_sha256(nika_file) + nika_file.suffix)
        move_file(nika_file, new_path)

    # Photos
    photos_files = get_files(photos_path, ['.jpg', '.mp4'])
    for photos_file in photos_files:
        time = dt.strptime(photos_file.stem[0:19], '%Y-%m-%dT%H_%M_%S')
        os.utime(photos_file, (dt.now().timestamp(), time.timestamp()))
    for photos_file in photos_files:
        time = dt.fromtimestamp(
            min(photos_file.stat().st_mtime, photos_file.stat().st_ctime))
        new_path = photos_path / \
            time.strftime('%Y-%m') / \
            (fix_name(time.isoformat()) + photos_file.suffix)
        move_file(photos_file, new_path)
    telegram_files = get_files(
        telegram_path, ['.jpg']) if telegram_path.exists() else []
    for telegram_file in telegram_files:
        time = dt.strptime(telegram_file.stem[0:17], 'IMG_%Y%m%d_%H%M%S')
        new_path = photos_path / \
            time.strftime('%Y-%m') / \
            (fix_name(time.isoformat()) + telegram_file.suffix)
        move_file(telegram_file, new_path)
    dcim_camera_files = get_files(
        dcim_camera_path, ['.jpg', '.mp4']) if dcim_camera_path.exists() else []
    for dcim_camera_file in dcim_camera_files:
        try:
            time = dt.strptime(dcim_camera_file.stem[-15:], '%Y%m%d_%H%M%S')
        except:
            time = dt.strptime(dcim_camera_file.stem[-17:], '%Y%m%d_%H%M%S_1')
        new_path = photos_path / \
            time.strftime('%Y-%m') / \
            (fix_name(time.isoformat()) + dcim_camera_file.suffix)
        move_file(dcim_camera_file, new_path)
    try_delete_dir(telegram_path)
    remove_empty_folders([photos_path, dcim_camera_path])

    # Screenshots
    screenshots_files = get_files(screenshots_path, ['.png', '.jpg'])

    for screenshot_file in screenshots_files:
        if 'old' not in str(screenshot_file).lower():
            try:
                time = dt.strptime(
                    screenshot_file.stem[0:19], '%Y-%m-%dT%H_%M_%S')
                os.utime(screenshot_file,
                         (dt.now().timestamp(), time.timestamp()))
            except ValueError:
                pass
    for screenshot_file in screenshots_files:
        if 'old' not in str(screenshot_file).lower():
            time = dt.fromtimestamp(
                min(screenshot_file.stat().st_mtime, screenshot_file.stat().st_ctime))
            new_path = screenshots_path / \
                time.strftime(
                    '%Y-%m') / (fix_name(time.isoformat()) + screenshot_file.suffix)
            move_file(screenshot_file, new_path)
        else:
            try:
                time = dt.strptime(screenshot_file.stem[0:14], '%Y%m%d%H%M%S')
                new_path = screenshots_path / \
                    time.strftime(
                        '%Y-%m') / (fix_name(time.isoformat()) + screenshot_file.suffix)
                move_file(screenshot_file, new_path)
                print(screenshot_file, new_path)
            except:
                pass

    screenshots_files = get_files(screenshots_path / 'Old', ['.png', '.jpg'])
    for screenshot_file in screenshots_files:
        hf.get_sha256(screenshot_file)
        new_path = screenshots_path / 'Old' / \
            (hf.get_sha256(screenshot_file) + screenshot_file.suffix)
        move_file(screenshot_file, new_path)
    dcim_screenshots_files = get_files(dcim_screenshots_path, [
                                       '.png', '.jpg']) if dcim_screenshots_path.exists() else []
    for dcim_screenshots_file in dcim_screenshots_files:
        time = dt.strptime(
            dcim_screenshots_file.stem[11:30], '%Y-%m-%d-%H-%M-%S')
        new_path = screenshots_path / \
            time.strftime('%Y-%m') / (fix_name(time.isoformat()
                                               ) + dcim_screenshots_file.suffix)
        move_file(dcim_screenshots_file, new_path)


if __name__ == "__main__":
    main()
